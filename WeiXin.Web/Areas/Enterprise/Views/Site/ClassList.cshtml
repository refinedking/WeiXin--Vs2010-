@model  PagerList<normal_class>
@using WeiXin.Model;
@using WeiXin.BO;
@{
    ViewBag.Title = "栏目列表";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css
{
    <link href="@Url.Content("~/Styles/_Layout_NoFrame.css")" rel="stylesheet" type="text/css" />
}
@section script
{
    <script src="@Url.Content("~/Scripts/_Layout_NoFrame.js")" type="text/javascript"></script>
}
@functions {

    public string GetTitle(int id)
    {
        WeiXin.BLL.normal_templateService tbBll = new WeiXin.BLL.normal_templateService();
normal_template temp=        tbBll.GetTemplateById(id);
        if (temp!=null)
        {
           
        return tbBll.GetTemplateById(id).Title; 
        }else{
            return "";
        }

    }

}
@using (Html.BeginForm())
{ 
    <div id="divMain">
        <div id="divRightPage">
            <!--列表标题部分-->
            <div class="divPageChildTitle" onselectstart='return false;'>
                <div class="divTitleItem">
                    栏目列表</div>
                <table id="tblQuery" style="float: left;">
                    <tr>
                        <td>
                            模糊查询：
                        </td>
                        <td>
                            <input type="text" class="txtQuery" name="keyWords" value='@ViewData["keyWords"]' />
                        </td>
                        <td colspan="2">
                            <input type="submit" class="divBtn" value="查 询" />
                        </td>
                    </tr>
                </table>
                <div class="divTitleCtrl">
                    @{
    List<AuthorityContract> list_PageAuthority = ViewData["list_PageAuthority"] as List<AuthorityContract>;

    foreach (AuthorityContract authority in list_PageAuthority)
    {
        switch (authority.AuthorityTag)
        {
            case "GN_ADD":

                        <a  eventtype="add" class="divBtn" href='@Url.Action("AddClass", new { operateType = "add", id = 0, ccid = ViewData["ccid"] })'>
                            添 加</a>
                                                            break;


            default:
                                                            break;
        }
    }

                    }
                    <!--页面按钮 如：提交、取消、下一步、关闭-->
                    <a eventtype="add" class="divBtn" href='@Url.Action("AuthorityList", "AuthorityManager", new { area = "WeiXin_Authority" })'>
                        刷 新</a>
                </div>
            </div>
            <div class="divReminders">
                <span class="keyPoint">模糊查询</span>：按照“功能名称”进行模糊查询<br />
                <span class="keyPoint">注</span>： 对功能点的启用或禁用操作，将在用户下次登录后生效
            </div>
            @if (Model.Count == 0)
            {
                <div class="nodata" onselectstart='return false;'>
                    <!--无数据提示层-->
                </div>
            }
            else
            {
                <div class="divDataList">
                    <!--数据列表-->
                    <table id="tblList" cellpadding="0" cellspacing="0">
                        <tr>
                            <th class="SerialNumber">
                            </th>
                            <!--复选框列(宽度固定为20px)-->
                            <th>
                                <input type="checkbox" class="chkAll" />
                            </th>
                            <th style="min-width: 90px;">
                                栏目名称
                            </th>
                            <th style="min-width: 150px;">
                                默认每页
                            </th>
                            <th style="min-width: 200px;">
                                栏目页模版
                            </th>
                            <th style="min-width: 200px;">
                                内容页模版
                            </th>
                            <th style="min-width: 200px;">
                                操作
                            </th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            
                            <tr class="tblItem">
                                <td>
                                    @(Model.IndexOf(item) + 1)
                                </td>
                                <td class="divCtrlList">
                                    <input type="checkbox" class="chkItem" value="@item.Id" />
                                </td>
                                <td>
                                    @item.Title
                                </td>
                                <td>
                                    @item.PageSize
                                </td>
                                <td>@GetTitle(item.TemplateId)
                                </td>
                                <td>@GetTitle(item.ContentTemp)
                                </td>
                                <td>
                                    @{foreach (WeiXin.BO.AuthorityContract authority in list_PageAuthority)
                                      {
                                          switch (authority.AuthorityTag)
                                          {
                                              case "GN_EDIT": 
                                        <a  href='@Url.Action("AddClass", new { id = item.Id, operate = "edit", ccid = ViewData["ccid"] })'>
                                            编 辑</a>
                                             break;
                                              case "GN_DELETE":

                                        <a cfmMsg="您确定要删除【@(item.Title.ToString().Trim())】信息？"  href='@Url.Action("DeleteClass", new { id = item.Id, operate = "del", ccid = ViewData["ccid"] })'>
                                            删 除</a>
                                             break;

                                          }
                                      }

                                    }
                                </td>
                            </tr>
                           
                        }
                    </table>
                </div>
            }
            <!--列表分页部分-->
            <div class='divPager' onselectstart='return false;'>
                <!--分页层-->
                @Html.Raw(Model.PagerHtmlA)
            </div>
        </div>
    </div>
}