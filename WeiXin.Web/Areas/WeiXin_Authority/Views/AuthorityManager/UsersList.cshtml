@model WeiXin.Core.PageHelper<WeiXin.BO.UsersContract>
@using WeiXin.BO
@{
    ViewBag.Title = "UsersList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css
{
    <link href="@Url.Content("~/Styles/_Layout_NoFrame.css")" rel="stylesheet" type="text/css" />
}
@section script
{
    <script src="@Url.Content("~/Scripts/_Layout_NoFrame.js")" type="text/javascript"></script>
}
@using (Html.BeginForm())
{
    <div id="divMain">
        <div id="divLeftPage">
            <ul id="ulModule">
                <li><span>⊙ 功能信息查询</span>
                    <table id="tblQuery">
                        <tr>
                            <td>
                                用户帐户：
                            </td>
                            <td>
                                <input type="text" class="txtQuery"  name="select_userName" value='@ViewData["userName"]' />
                            </td>
                        </tr>
                        <tr>
                            <td>
                            </td>
                            <td colspan="2">
                                <input type="submit" class="divBtn" value="查 询" />
                            </td>
                        </tr>
                    </table>
                </li>
            </ul>
        </div>
        <div id="divRightPage">
            <!--列表标题部分-->
            <div class="divPageChildTitle" onselectstart='return false;'>
                <div class="divTitleItem">
                    用户列表</div>
                <div class="divTitleCtrl">
                    <!--页面按钮 如：提交、取消、下一步、关闭-->
                    @{List<AuthorityContract> list_PageAuthority = ViewData["list_PageAuthority"] as List<AuthorityContract>;
                      foreach (AuthorityContract authority in list_PageAuthority)
                      {
                          switch (authority.AuthorityTag)
                          {
                              case "GN_ADD":
                        <a eventtype="add" class="divBtn"  href='@Url.Action("AddOrUpdateUser", "AuthorityManager", new { area = "WeiXin_Authority" })'>
                            添 加</a>
                                                            break;
                              case "GN_DELETE":
                        <a eventtype="del" class="divBtn"  href='@Url.Action("DeleteUser", "AuthorityManager", new { area = "WeiXin_Authority" })'>
                            删 除</a>
                                                            break;

                              default:
                                                            break;
                          }
                      }

                    }
                    <a eventtype="add" class="divBtn"  href='@Url.Action("UsersList", "AuthorityManager", new { area = "WeiXin_Authority" }) '>
                        刷 新</a> <a eventtype="del" class="divBtn2" cfmMsg="是否确定修改?"  href='@Url.Action("UpdateUsersPassword", "AuthorityManager", new { area = "WeiXin_Authority" })'>
                            重置密码</a><a eventtype="del" cfmMsg="是否确定修改?" class="divBtn2"  href='@Url.Action("UpdateUsersStatus", "AuthorityManager", new { area = "WeiXin_Authority" })'>
                                启用/禁用</a>
                </div>
            </div>
            <div class="divReminders">
                对账户的状态设置及权限设置将在用户下次登录后生效<br />
                删除功能点会对拥有这个功能的产生
            </div>
            @if (Model.Count != 0)
            {
                <!--列表表体部分-->
                <div class="divDataList">
                    <!--数据列表-->
                    <table id="tblList" cellpadding="0" cellspacing="0">
                        <tr class="tblHead">
                            <th class="SerialNumber">
                            </th>
                            <!--复选框列(宽度固定为20px)-->
                            <th>
                                <input type="checkbox" class="chkAll" />
                            </th>
                            <th style="min-width: 150px;">
                                帐户
                            </th>
                            <th style="min-width: 150px;">
                                员工角色
                            </th>
                            <th style="min-width: 140px;">
                                创建时间
                            </th>
                            <th style="min-width: 40px;">
                                状态
                            </th>
                            <th style="min-width: 200px;">
                                操作
                            </th>
                        </tr>
                        @{List<RolesContract> list = ViewData["role"] as List<RolesContract>;
                          foreach (var item in Model)
                          {
                            <tr class="tblItem">
                                <td>
                                    @(Model.IndexOf(item) + 1)
                                </td>
                                <td class="divCtrlList">
                                    <input type="checkbox" class="chkItem" value='@item.UserID' />
                                </td>
                                <td>
                                    @Html.Encode(item.UserName)
                                </td>
                                <td>
                                    @Html.Raw(item.RoleID == null ? "<font color='red'>独立授权</font>" : list.Where(r => r.RoleID == item.RoleID).Single().RoleName)
                                </td>
                                <td>
                                    @Html.Encode(item.CreateTime)
                                </td>
                                <td style="text-align: center;">
                                    @Html.Raw(item.Status == 0 ? "正常" : "<font color='red'>禁用</font>")
                                </td>
                                <td>
                                    <a  href='@Url.Action("UpdateUsersStatus", "AuthorityManager", new { area = "WeiXin_Authority", id = item.UserID })'>
                                        启用/禁用</a>
                                    @foreach (var authority in list_PageAuthority)
                                    {
                                        string isEnable = item.Status == 0 ? "" : "disabled";
                                        switch (authority.AuthorityTag)
                                        {
                                            case "GN_OPTION":
                                        <a @isEnable    href='@Url.Action("Update_User_Authority", "AuthorityManager", new { area = "WeiXin_Authority", id = item.UserID })'>
                                            编辑权限</a>

                                                         break;
                                            case "GN_EDIT":
                                        <a @isEnable    href='@Url.Action("AddOrUpdateUser", "AuthorityManager", new { area = "WeiXin_Authority", id = item.UserID })'>
                                            编 辑</a>

                                                         break;
                                            case "GN_RESETPASSWORD":
                                        <a @isEnable href='@Url.Action("UpdateUsersPassword", "AuthorityManager", new { area = "WeiXin_Authority", id = item.UserID })'>
                                            重置密码</a>
                                                      break;

                                        }
                                    }
                                      <a     href='@Url.Action("Update_User_Authority", "AuthorityManager", new { area = "WeiXin_Authority", id = item.UserID })'>
                                            编辑权限</a>
                                </td>
                            </tr>
                          }
                        }
                    </table>
                </div>
            }
            else
            {
                <!--没有任何数据-->
                <div class="nodata" onselectstart='return false;'>
                </div>
            }
            <!--列表分页部分-->
            <div class="divPager" onselectstart='return false;'>
                @Html.Raw(Model.PagerHtmlA)
            </div>
        </div>
    </div>
}